# Generated by Django 5.2.4 on 2025-08-22 03:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("reference", "0011_alter_franchise_logo_alter_league_logo_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="game",
            name="paused_time",
            field=models.IntegerField(
                blank=True,
                help_text="Time (in seconds from the start) the game was paused, if it was paused and resumed later",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="resumed_tagpro_eu",
            field=models.IntegerField(
                blank=True,
                help_text="Second tagpro.eu match ID, if the game was paused and resumed later",
                null=True,
                unique=True,
            ),
        ),
        migrations.CreateModel(
            name="PlayerGameStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_played",
                    models.IntegerField(
                        blank=True, help_text="Time played in seconds", null=True
                    ),
                ),
                ("tags", models.IntegerField(blank=True, null=True)),
                ("pops", models.IntegerField(blank=True, null=True)),
                ("grabs", models.IntegerField(blank=True, null=True)),
                ("drops", models.IntegerField(blank=True, null=True)),
                (
                    "hold",
                    models.IntegerField(
                        blank=True,
                        help_text="Hold time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("captures", models.IntegerField(blank=True, null=True)),
                (
                    "prevent",
                    models.IntegerField(
                        blank=True,
                        help_text="Prevent time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("returns", models.IntegerField(blank=True, null=True)),
                ("powerups", models.IntegerField(blank=True, null=True)),
                ("caps_for", models.IntegerField(blank=True, null=True)),
                ("caps_against", models.IntegerField(blank=True, null=True)),
                ("total_pups_in_game", models.IntegerField(blank=True, null=True)),
                ("grabs_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("caps_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("grabs_off_regrab", models.IntegerField(blank=True, null=True)),
                ("caps_off_regrab", models.IntegerField(blank=True, null=True)),
                ("long_holds", models.IntegerField(blank=True, null=True)),
                ("flaccids", models.IntegerField(blank=True, null=True)),
                ("handoffs", models.IntegerField(blank=True, null=True)),
                ("good_handoffs", models.IntegerField(blank=True, null=True)),
                ("quick_returns", models.IntegerField(blank=True, null=True)),
                ("returns_in_base", models.IntegerField(blank=True, null=True)),
                ("saves", models.IntegerField(blank=True, null=True)),
                ("key_returns", models.IntegerField(blank=True, null=True)),
                ("hold_against", models.IntegerField(blank=True, null=True)),
                ("kept_flags", models.IntegerField(blank=True, null=True)),
                (
                    "player_gamelog",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="reference.playergamelog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerSeasonStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_played",
                    models.IntegerField(
                        blank=True, help_text="Time played in seconds", null=True
                    ),
                ),
                ("tags", models.IntegerField(blank=True, null=True)),
                ("pops", models.IntegerField(blank=True, null=True)),
                ("grabs", models.IntegerField(blank=True, null=True)),
                ("drops", models.IntegerField(blank=True, null=True)),
                (
                    "hold",
                    models.IntegerField(
                        blank=True,
                        help_text="Hold time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("captures", models.IntegerField(blank=True, null=True)),
                (
                    "prevent",
                    models.IntegerField(
                        blank=True,
                        help_text="Prevent time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("returns", models.IntegerField(blank=True, null=True)),
                ("powerups", models.IntegerField(blank=True, null=True)),
                ("caps_for", models.IntegerField(blank=True, null=True)),
                ("caps_against", models.IntegerField(blank=True, null=True)),
                ("total_pups_in_game", models.IntegerField(blank=True, null=True)),
                ("grabs_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("caps_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("grabs_off_regrab", models.IntegerField(blank=True, null=True)),
                ("caps_off_regrab", models.IntegerField(blank=True, null=True)),
                ("long_holds", models.IntegerField(blank=True, null=True)),
                ("flaccids", models.IntegerField(blank=True, null=True)),
                ("handoffs", models.IntegerField(blank=True, null=True)),
                ("good_handoffs", models.IntegerField(blank=True, null=True)),
                ("quick_returns", models.IntegerField(blank=True, null=True)),
                ("returns_in_base", models.IntegerField(blank=True, null=True)),
                ("saves", models.IntegerField(blank=True, null=True)),
                ("key_returns", models.IntegerField(blank=True, null=True)),
                ("hold_against", models.IntegerField(blank=True, null=True)),
                ("kept_flags", models.IntegerField(blank=True, null=True)),
                (
                    "player_season",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="reference.playerseason",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerWeekStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week", models.CharField(max_length=100)),
                (
                    "time_played",
                    models.IntegerField(
                        blank=True, help_text="Time played in seconds", null=True
                    ),
                ),
                ("tags", models.IntegerField(blank=True, null=True)),
                ("pops", models.IntegerField(blank=True, null=True)),
                ("grabs", models.IntegerField(blank=True, null=True)),
                ("drops", models.IntegerField(blank=True, null=True)),
                (
                    "hold",
                    models.IntegerField(
                        blank=True,
                        help_text="Hold time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("captures", models.IntegerField(blank=True, null=True)),
                (
                    "prevent",
                    models.IntegerField(
                        blank=True,
                        help_text="Prevent time in ticks (1/60th of a second)",
                        null=True,
                    ),
                ),
                ("returns", models.IntegerField(blank=True, null=True)),
                ("powerups", models.IntegerField(blank=True, null=True)),
                ("caps_for", models.IntegerField(blank=True, null=True)),
                ("caps_against", models.IntegerField(blank=True, null=True)),
                ("total_pups_in_game", models.IntegerField(blank=True, null=True)),
                ("grabs_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("caps_off_handoffs", models.IntegerField(blank=True, null=True)),
                ("grabs_off_regrab", models.IntegerField(blank=True, null=True)),
                ("caps_off_regrab", models.IntegerField(blank=True, null=True)),
                ("long_holds", models.IntegerField(blank=True, null=True)),
                ("flaccids", models.IntegerField(blank=True, null=True)),
                ("handoffs", models.IntegerField(blank=True, null=True)),
                ("good_handoffs", models.IntegerField(blank=True, null=True)),
                ("quick_returns", models.IntegerField(blank=True, null=True)),
                ("returns_in_base", models.IntegerField(blank=True, null=True)),
                ("saves", models.IntegerField(blank=True, null=True)),
                ("key_returns", models.IntegerField(blank=True, null=True)),
                ("hold_against", models.IntegerField(blank=True, null=True)),
                ("kept_flags", models.IntegerField(blank=True, null=True)),
                (
                    "player_season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_stats",
                        to="reference.playerseason",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(name="PlayerStats",),
    ]
