# Generated by Django 5.2.4 on 2025-08-02 20:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Franchise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("abbr", models.CharField(max_length=10)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="icons/franchises/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="League",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full league name, e.g., Major League TagPro",
                        max_length=255,
                    ),
                ),
                (
                    "abbr",
                    models.CharField(
                        help_text="Abbreviation for the league, e.g., MLTP",
                        max_length=10,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NA", "North America"),
                            ("EU", "Europe"),
                            ("OCE", "Oceania"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "ordering",
                    models.IntegerField(
                        help_text="Indicates how leagues should be ordered when several are displayed"
                    ),
                ),
                ("gamemode", models.CharField(help_text="CTF", max_length=50)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="icons/leagues/"
                    ),
                ),
                (
                    "trophy_icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="icons/trophies/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "profile",
                    models.CharField(
                        blank=True,
                        help_text="TagPro profile ID",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="e.g., NLTP S36", max_length=255)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "crc",
                    models.ManyToManyField(
                        blank=True,
                        help_text="CRC members for the season",
                        related_name="crc_seasons",
                        to="reference.player",
                    ),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seasons",
                        to="reference.league",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "week",
                    models.CharField(
                        help_text="e.g., Week 3, Foci Four", max_length=100
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="reference.season",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamSeason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The team's name for this season, which might differ from the franchise name",
                        max_length=255,
                    ),
                ),
                ("abbr", models.CharField(max_length=10)),
                (
                    "captain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="captain_of",
                        to="reference.player",
                    ),
                ),
                (
                    "co_captain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="co_captain_of",
                        to="reference.player",
                    ),
                ),
                (
                    "franchise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="team_seasons",
                        to="reference.franchise",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="reference.season",
                    ),
                ),
            ],
            options={"unique_together": {("franchise", "season")},},
        ),
        migrations.CreateModel(
            name="PlayoffSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seed1", models.IntegerField()),
                ("seed2", models.IntegerField()),
                ("team1_game_wins", models.IntegerField(blank=True, null=True)),
                ("team2_game_wins", models.IntegerField(blank=True, null=True)),
                (
                    "match",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playoff_series",
                        to="reference.match",
                    ),
                ),
                (
                    "team1_prev_series",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="next_series_for_team1",
                        to="reference.playoffseries",
                    ),
                ),
                (
                    "team2_prev_series",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="next_series_for_team2",
                        to="reference.playoffseries",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="series_wins",
                        to="reference.teamseason",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerSeason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "playing_as",
                    models.CharField(
                        help_text="The name the player used during this season",
                        max_length=255,
                    ),
                ),
                (
                    "position_restriction",
                    models.CharField(
                        choices=[("O", "Offense"), ("D", "Defense"), ("N", "None")],
                        default="N",
                        max_length=1,
                    ),
                ),
                (
                    "other_restrictions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="seasons_played",
                        to="reference.player",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_seasons",
                        to="reference.season",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        help_text="The team the player ended the season on, if any",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="players",
                        to="reference.teamseason",
                    ),
                ),
            ],
            options={"unique_together": {("season", "player")},},
        ),
        migrations.AddField(
            model_name="match",
            name="team1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="home_matches",
                to="reference.teamseason",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="team2",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="away_matches",
                to="reference.teamseason",
            ),
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_in_match",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("tagpro_eu", models.IntegerField(blank=True, null=True, unique=True)),
                (
                    "replay",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("vod", models.URLField(blank=True, max_length=255, null=True)),
                ("map_name", models.CharField(blank=True, max_length=255, null=True)),
                ("map_id", models.IntegerField(blank=True, null=True)),
                ("team1_score", models.IntegerField()),
                ("team2_score", models.IntegerField()),
                (
                    "outcome",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("L", "Loss"),
                            ("OTL", "OT Loss"),
                            ("T", "Tie"),
                            ("OTW", "OT Win"),
                            ("W", "Win"),
                        ],
                        help_text="Outcome of the game for team1",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "team1_standing_points",
                    models.IntegerField(
                        blank=True,
                        help_text="Points awarded for standings (null in playoffs)",
                        null=True,
                    ),
                ),
                (
                    "team2_standing_points",
                    models.IntegerField(
                        blank=True,
                        help_text="Points awarded for standings (null in playoffs)",
                        null=True,
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="games",
                        to="reference.match",
                    ),
                ),
                (
                    "blue_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blue_games",
                        to="reference.teamseason",
                    ),
                ),
                (
                    "red_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="red_games",
                        to="reference.teamseason",
                    ),
                ),
            ],
            options={
                "ordering": ["game_in_match"],
                "unique_together": {("match", "game_in_match")},
            },
        ),
        migrations.CreateModel(
            name="Award",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("award_name", models.CharField(max_length=255)),
                (
                    "placement",
                    models.PositiveIntegerField(
                        blank=True,
                        default=1,
                        help_text="1 for 1st place, 2 for 2nd, etc.",
                        null=True,
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        help_text="Icon representing the award",
                        null=True,
                        upload_to="icons/awards/",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        help_text="Player who won the award",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reference.player",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="awards",
                        to="reference.season",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        help_text="Team awarded or player's team",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reference.teamseason",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("draft", "Draft"), ("add", "Add"), ("drop", "Drop")],
                        max_length=10,
                    ),
                ),
                ("date", models.DateField(blank=True, null=True)),
                (
                    "before_week",
                    models.IntegerField(
                        blank=True,
                        help_text="The week number this transaction occurred before",
                        null=True,
                    ),
                ),
                (
                    "net_tc_spent",
                    models.IntegerField(
                        blank=True,
                        help_text="Net TagCoins spent or gained (positive if spent, negative if gained)",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("round", models.IntegerField(blank=True, null=True)),
                ("pick", models.IntegerField(blank=True, null=True)),
                ("was_snake", models.BooleanField(blank=True, null=True)),
                (
                    "player_season",
                    models.ForeignKey(
                        db_column="player",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="reference.playerseason",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="reference.teamseason",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerGameLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("playing_as", models.CharField(max_length=255)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_stats",
                        to="reference.game",
                    ),
                ),
                (
                    "player_season",
                    models.ForeignKey(
                        db_column="player",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gamelogs",
                        to="reference.playerseason",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reference.teamseason",
                    ),
                ),
            ],
            options={"unique_together": {("game", "player_season")},},
        ),
    ]
